type BillBroker @entity {
  " the vault address "
  id: ID!
  name: String!
  symbol: String!
  decimals: BigInt!
  perp: String!
  perpName: String!
  perpSymbol: String!
  perpDecimals: BigInt!
  usd: String!
  usdName: String!
  usdSymbol: String!
  usdDecimals: BigInt!
  perpBal: BigDecimal!
  usdBal: BigDecimal!
  perpPrice: BigDecimal!
  usdPrice: BigDecimal!
  totalSupply: BigDecimal!
  tvl:BigDecimal!
  price:BigDecimal!
  dailyStats: [BillBrokerDailyStat!]! @derivedFrom(field: "vault")
  swapNonce: BigInt!
  swaps: [BillBrokerSwap!]! @derivedFrom(field: "vault")
}

type BillBrokerDailyStat @entity {
  "<vault address>-<day timestamp>"
  id: ID!
  vault: BillBroker!
  timestamp: BigInt!
  perpBal: BigDecimal!
  usdBal: BigDecimal!
  perpPrice: BigDecimal!
  usdPrice: BigDecimal!
  totalSupply: BigDecimal!
  usdSwapAmt: BigDecimal!
  perpSwapAmt: BigDecimal!
  usdFeeAmt: BigDecimal!
  perpFeeAmt: BigDecimal!
  tvl:BigDecimal!
  price:BigDecimal!
}

type BillBrokerSwap @entity {
  "<vault address>-<nonce>"
  id: ID!
  vault: BillBroker!
  nonce: BigInt!
  type: String!
  swapAmt: BigDecimal!
  feeAmt: BigDecimal!
  tx: String!
}

type CharmVault @entity {
  " the vault address "
  id: ID!
  pool: String!
  name: String!
  symbol: String!
  decimals: BigInt!
  usd: String!
  usdName: String!
  usdSymbol: String!
  usdDecimals: BigInt!
  perp: String!
  perpName: String!
  perpSymbol: String!
  perpDecimals: BigInt!
  usdBal: BigDecimal!
  perpBal: BigDecimal!
  usdPrice: BigDecimal!
  perpPrice: BigDecimal!
  tvl: BigDecimal!
  price: BigDecimal!
  totalSupply: BigDecimal!
  unusedToken0Bal: BigDecimal!
  unusedToken1Bal: BigDecimal!
  unusedTVL: BigDecimal!
  dailyStats: [CharmVaultDailyStat!]! @derivedFrom(field: "vault")
}

type CharmVaultDailyStat @entity {
  "<vault address>-<day timestamp>"
  id: ID!
  vault: CharmVault!
  timestamp: BigInt!
  usdBal: BigDecimal!
  perpBal: BigDecimal!
  usdPrice: BigDecimal!
  perpPrice: BigDecimal!
  tvl: BigDecimal!
  price: BigDecimal!
  totalSupply: BigDecimal!
}